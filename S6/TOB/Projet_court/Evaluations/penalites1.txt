Date de l'évaluation : jeu. 17 mars 2022 09:46:47 CET

Nombre de similitudes (voir evaluations/penalites1/sim_java.txt) : 7
Les similitudes indiquent généralement du code à restructurer.

Erreurs checkstyle (différentes/types) : 2/2	(voir evaluations/penalites1//checkstyle.log)

Classe OperationInterditeException : OperationInterditeException (ok)

Procuration sur le jeu réel : allumettes/JeuProxy.java (ok)

OperationInterditeException, levée dans : allumettes/JeuProxy.java (ok)
OperationInterditeException, récupérée dans : allumettes/Arbitre.java (ok)

Throwable, Exception et RuntimeException ne devraient pas être récupérées car trop générales... ok

AssertionError ne doit pas être récupérée... ok

Autres exceptions récupérées :
  | allumettes/Arbitre.java:76:                 } catch (TricheException e) {
  | allumettes/Arbitre.java:81:                     } catch (CoupInvalideException exc) {
  | allumettes/Arbitre.java:83:                 } catch (NoSuchElementException e) {
  | allumettes/Arbitre.java:85:                 } catch (IllegalStateException e) {
  | allumettes/Arbitre.java:99:         } catch (CoupInvalideException e) {
  | allumettes/Jouer.java:37:       } catch (ConfigurationException e) {
  | allumettes/Humain.java:36:          } catch (NumberFormatException e) {

Utilisation de 'Scanner' : ok
  | allumettes/Humain.java:14:  public static Scanner scanner;
  | allumettes/Humain.java:17:      this.scanner = new Scanner(System.in);

Utilisation de 'split' : ok mais un seul split devrait suffir !  Code à restructurer...
  | allumettes/Joueur.java:35:  public String split() {
  | allumettes/Jouer.java:83:       String[] arg = chaine.split("@");

Utilisation de 'Random' : ok
  | allumettes/Expert.java:2:import java.util.Random;
  | allumettes/Expert.java:17:      Random random = new Random();
  | allumettes/Naif.java:2:import java.util.Random;
  | allumettes/Naif.java:17:        Random random = new Random();

Utilisation de '3' : ok

Affichage de 'Impossible !' : ok

Utilisation de 'System.exit' : ok

Compilation de Jouer.java : OK.
Compilation de Arbitre.java : OK.
Compilation de TestRapide.java : OK.
Test exemplePresqueSujet : NON CONFORME (voir evaluations/penalites1/exemplePresqueSujet.diff)	(pénalité : 1)
Test exempleTricheurSujet : NON CONFORME (voir evaluations/penalites1/exempleTricheurSujet.diff)	(pénalité : 1)
Test exempleConfiantTricheurSujet : NON CONFORME (voir evaluations/penalites1/exempleConfiantTricheurSujet.diff)	(pénalité : 1)
Test exempleRobustesse : NON CONFORME (voir evaluations/penalites1/exempleRobustesse.diff)
Test exempleHumainTricheurExpert : NON CONFORME (voir evaluations/penalites1/exempleHumainTricheurExpert.diff)
Test exempleMaxLou : NON CONFORME (voir evaluations/penalites1/exempleMaxLou.diff)
Test exempleRapideRapide : NON CONFORME (voir evaluations/penalites1/exempleRapideRapide.diff)
Test exempleTricheurExpert : NON CONFORME (voir evaluations/penalites1/exempleTricheurExpert.diff)

Test RobustesseTest : OK (25 tests)	(voir evaluations/penalites1/RobustesseTest.log)

On recommence avec les classes/interfaces fournies : Jeu ConfigurationException CoupInvalideException
Compilation de Jouer.java : OK.
Compilation de Arbitre.java : OK.

Vérification du respect du diagramme de classe...
Test FormeTest : OK (2 tests)	(voir evaluations/penalites1/FormeTest.log)

Compilation de TestRapide.java : OK.
Test allumettes.TestRapide : OK (2 tests)	(voir evaluations/penalites1/allumettes.TestRapide.log)

Total pénalités : 3
